<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Igor Kostyuchenok</title>
  
  <subtitle>Igor&#39;s Blog</subtitle>
  <link href="https://igorkosta.github.io/atom.xml" rel="self"/>
  
  <link href="https://igorkosta.github.io/"/>
  <updated>2022-08-01T16:00:25.899Z</updated>
  <id>https://igorkosta.github.io/</id>
  
  <author>
    <name>Igor Kostyuchenok</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>How To VC after 2022</title>
    <link href="https://igorkosta.github.io/2022/08/01/vc-ing-after-2022/"/>
    <id>https://igorkosta.github.io/2022/08/01/vc-ing-after-2022/</id>
    <published>2022-08-01T15:51:18.000Z</published>
    <updated>2022-08-01T16:00:25.899Z</updated>
    
    <content type="html"><![CDATA[<p>The world is changing very rapidly. Markets are crashing, money is disappearing, new unions are being created, the old ones are being destroyed.</p><p>The investments are not as they were even a year ago. VC’s didn’t get any wiser but they’ve gotten more precautious. On one hand they have to spend the money cause it’s losing its value every day, on the other hand they cannot spend it on the startups that don’t make any profit.</p><span id="more"></span><h2 id="For-VCs"><a href="#For-VCs" class="headerlink" title="For VCs"></a>For VCs</h2><p>What should the VCs do to at least try to stay on the safe side of things and not lose all their investments:</p><ul><li>Only invest in startups that are profitable as of today</li><li>Stop throwing money away by investing in copy cats that are sharing the same markets</li><li>Don’t invest in startups that are not ready to explore totally new markets</li><li>Europe won’t be a big market in the next 2-10 years - look elsewhere</li><li>The safest European countries to still invest in are Great Britain, Spain, Portugal</li><li>The least safest European countries are the Baltic States</li><li>US are still a good market to invest in</li></ul><p>A bit more on Great Britain - The Commonwealth is one of the biggest English Speaking markets worldwide and will not only stay relatively stable but will grow together even stronger, so it will be easier for startups to roll out in the new Commonwealth country and thus get more customers. Spain and Portugal will fall into the realm of Great Britain with a very high probability.</p><p>African market will stay very turbulent and unpredictable - it can yield very high profits but can also bring very high losses. The same will be true for Latin America and some parts of Asia.</p><h2 id="For-the-startups"><a href="#For-the-startups" class="headerlink" title="For the startups"></a>For the startups</h2><p>If you start a company in Germany now - start looking at other markets immediately. German market will crash very soon. Middle class will practically cease to exist - people won’t be able to pay for your product. The only thing you will be able to sell here are microloans. Even if it sounds funny to you - if you want to build product for German speakers - start your business in Austria, not Germany.</p><p>If you are a startup based in France, be prepared to expand your business to a former french colony, France will start being active in their former colonies again - they won’t have any other markets to operate in.</p><p>Spain and Portugal - it probably sounds suspicious but you are on a safer side of things. Prepare to work with the Commonwealth countries. You will have quite a market soon.</p><p>If you haven’t started to build your product yet - start looking into the <a href="https://en.wikipedia.org/wiki/Agricultural_technology">AgTech</a> space - VCs should and will start investing more and more into agriculture.</p><h2 id="Concluding-Thoughts"><a href="#Concluding-Thoughts" class="headerlink" title="Concluding Thoughts"></a>Concluding Thoughts</h2><p>The world is not going to be the same anymore. Be prepared to do more with less and open absolutely new markets for yourself.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;The world is changing very rapidly. Markets are crashing, money is disappearing, new unions are being created, the old ones are being destroyed.&lt;/p&gt;
&lt;p&gt;The investments are not as they were even a year ago. VC’s didn’t get any wiser but they’ve gotten more precautious. On one hand they have to spend the money cause it’s losing its value every day, on the other hand they cannot spend it on the startups that don’t make any profit.&lt;/p&gt;</summary>
    
    
    
    
    <category term="vc, investment, geo-politics" scheme="https://igorkosta.github.io/tags/vc-investment-geo-politics/"/>
    
  </entry>
  
  <entry>
    <title>New World Order - Old Europe</title>
    <link href="https://igorkosta.github.io/2022/07/18/new-world-order-II/"/>
    <id>https://igorkosta.github.io/2022/07/18/new-world-order-II/</id>
    <published>2022-07-18T11:39:08.000Z</published>
    <updated>2022-08-01T16:00:25.895Z</updated>
    
    <content type="html"><![CDATA[<p>As a part of the European Union, you’re not allowed to handle in the interest of your own country and your citizens, what implies that any EU country only handles in the interest of their own and the foreign elite groups. We clearly see right now, which countries are independent and which ones are taken hostage by the elite driven governments.</p><span id="more"></span><h2 id="Germany"><a href="#Germany" class="headerlink" title="Germany"></a>Germany</h2><p>Together with losing its economic power Germany will lose its political power in Europe. Therefore it won’t be able to push the laws and decisions that favour German economy through the European Parliament that will only worsen its geopolitical place both in Europe and the world.<br>It’s absolutely obvious right now, that German government doesn’t follow its own interest. Its economic and political suicide cannot be underrated. The worsening of the economic situation in Germany will lead to the fall down of the European Union.</p><p>What makes the matters even worse is the division in the German society. Since the German reunification in 1990 Eastern Germans  have been seen and handled as the people of the second sort. It’s been seen and felt everywhere. On top of that the Germans from the East understood that the life in the West is not as good or free as they have imagined. Weirdly enough it’s even more oppressive and dictatorial than the former <a href="https://en.wikipedia.org/wiki/East_Germany">GDR</a>.</p><p>What you have to consider as well is that people from East Germany are the descendants of the old Slavic tribes, that makes them more free minded than the Germans from the West or North. These were the first people to go on the streets and protest whenever there were problems caused by the <a href="https://www.vice.com/en/article/3ky3vy/chemnitz-germany-far-right-protests">uncontrolled immigration</a> or riots <a href="https://www.france24.com/en/europe/20220121-weekly-protests-against-mandatory-vaccination-increase-in-germany">against vaccinations</a>. Although the liberal media is trying to blame far-right movement for these protest, they don’t have anything to do with the neo-nazis. People from East Germany haven’t been brainwashed as much as their western counterparts and are still the ones who are able to think critically. They also feel that they’re not represented in the Government and long for being able to make their own decisions.</p><p>With all that said, we can expect the rise of the East Germany and their exit out of the Federal Republic of Germany but only if Great Britain will succeed in its imperialist endeavour. This change is impossible without Russian agreement. On one hand Russian Federation needs a strong Germany, on the other hand if it can help breaking it apart it can get the loyal East Germany with all its industry and a smaller dependent Federal Republic potentially without Bavaria in the South and Hamburg and Schleswig-Holstein in the North.</p><p>Bavaria has been considered itself a powerhouse of Germany and wanted to become independent for quite some time already. It may decide to join the newly created <a href="https://en.wikipedia.org/wiki/House_of_Habsburg">House of Habsburg</a> that can also takes parts of Northern Italy and Czech Republic - see image below.</p><p><img src="/2022/07/18/new-world-order-II/Habsburg_dominions_1700.png"></p><h2 id="Italy"><a href="#Italy" class="headerlink" title="Italy"></a>Italy</h2><p>What will happen to Italy if the European Union will start falling apart. Italy is even more fragmented than Germany. On top of that the former elites have been put out of power for too long but they are still very strong and own most of the tangible assets in the country.</p><p>Once the big cake of Europe will start getting cut in pieces again, they will take a chance to get their part and come back to the top.</p><p>Additionally to being a divided country Italy is neither an economic nor a military or a political power, what will play with it a cruel joke. It may sound funny but the only power that can try to hold the country together is the Italian mafia. They won’t like to lose the income from the territories that will get under control of third countries but they won’t have enough resources to withstand the pressure of the Austro-Hungarian union or France.</p><p>Due to the geographical shape of the country and its history, we can assume that the northern part of Italy will join the Austro-Hungarians. France probably won’t have enough political will to try to annex the Italian territories close to the French border.</p><p>Although we were talking about Italian mafia as a power that will try to hold the country together, they may make a contrary decision and proclaim the Independent Republic of Naples.</p><h2 id="France"><a href="#France" class="headerlink" title="France"></a>France</h2><p>France as the only nuclear power in mainland Europe that also has a good and functioning army is doomed to stay independent but with failed Germany and growing British influence it will gradually lose its economic and political power. Due to these factors France will try to regain the power in its former colonies or even get influential in other parts of the world.</p><p>But what with the France’s influence in Europe. If it had strong politicians the could try to take over french speaking part of Belgium and negotiate the annexation of the Italian territories close to the french border.</p><p>On the other hand France may get problems with <a href="https://en.wikipedia.org/wiki/French_Basque_Country">Pays basque</a> that may try to proclaim independence from France and maybe build one state together with <a href="https://en.wikipedia.org/wiki/Southern_Basque_Country">Hegoalde</a> - the Spanish Basque Country.</p><p>US will use France to control British influence in Europe. France will be torn between failed Germany and Spain that is controlled by GB. US may decide to give back to support France’s independence to better control Great Britain’s gaining power in Europe.</p><h2 id="Spain-Portugal"><a href="#Spain-Portugal" class="headerlink" title="Spain/Portugal"></a>Spain/Portugal</h2><p>Spain and Portugal will fall under the governance of Great Britain. Neither of two countries can stay independent. Without the economic support of Germany and military support of France, they will stand no chance to stay independent. They will need allies and the only ally that is interested in getting them under its protectorate is Great Britain.</p><p>The deal between Great Britain and Iberian Peninsula will be arranged as a economic, political and military union between the countries.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;As a part of the European Union, you’re not allowed to handle in the interest of your own country and your citizens, what implies that any EU country only handles in the interest of their own and the foreign elite groups. We clearly see right now, which countries are independent and which ones are taken hostage by the elite driven governments.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>New World Order - Main Players</title>
    <link href="https://igorkosta.github.io/2022/07/17/new-world-order-I/"/>
    <id>https://igorkosta.github.io/2022/07/17/new-world-order-I/</id>
    <published>2022-07-17T13:38:04.000Z</published>
    <updated>2022-08-01T16:00:25.895Z</updated>
    
    <content type="html"><![CDATA[<p>That’s the second part of the <code>World Order</code> series. It’s an attempt to analyze the current geopolitical situation and to draw some conclusions based on the open facts.</p><span id="more"></span><p>Russia is making slow progress with the special military operation in Ukraine. Nevertheless it’s taking over new new cities and villages every day. The territory of the <a href="https://en.wikipedia.org/wiki/Luhansk_People%27s_Republic">Luhansk People’s Republic</a> is completely Russian now, whereas some parts of the <a href="https://en.wikipedia.org/wiki/Donetsk_People%27s_Republic">Donetsk People’s Republic</a> are still occupied by the Kiev regime.</p><p>It’s very important to mention that all former Ukrainian territories have been under artillery and rocket fire after they were lost to Russia. Ukraine is shooting at its own civilians by attacking peaceful cities that don’t even have Russian army stationed in them. The western media either ignores the facts of attacks on civilians by Ukraine or blames these attacks on Russian army, which is blatantly stupid but is still being consumed by the brainwashed European audience.</p><h1 id="Players"><a href="#Players" class="headerlink" title="Players"></a>Players</h1><p>Let’s take a step back and see who are the main active players in this geopolitical game of chess. You may think there are many of them but in reality there are only a few.</p><h2 id="United-States"><a href="#United-States" class="headerlink" title="United States"></a>United States</h2><p>US are an active player in the <code>Game of Ukraine</code> and despite all the internal problems is doing pretty well, taking into consideration that their goal is to weaken both Russian and Europe</p><h2 id="Great-Britain"><a href="#Great-Britain" class="headerlink" title="Great Britain"></a>Great Britain</h2><p>The most active player in this game and has put the biggest bet on the win. Since Great Britain lost its number one position in the world to the United States, they didn’t stop crafting the plans to get back on top of the world. You may think it doesn’t sound reasonable but if you think about Great Britain you have to consider the <a href="https://www.britannica.com/topic/Commonwealth-association-of-states">Commonwealth</a> states as well. Combining all the states together you have one of the biggest Empires by population and GDP.<br>In order to become the main force in the World, Great Britain needs to destroy the European Union. To achieve this goal Germany’s economic power has to be weakened - in the best case scenario Germany needs to cease to exist in its current borders.<br>GB is not stupid to fight this war by itself. They are already giving orders to the Ukrainian army and using their intelligence on the battle field. But they see that Ukraine is losing this war, so they are proposing to build a <a href="https://www.lrt.lt/en/news-in-english/19/1704219/johnson-proposes-alternative-union-with-ukraine-may-include-baltic-states-media">military alliance</a> together with Poland, Ukraine and the Baltic States. That could help them to deploy more people on the battlefield without dragging NATO into it. Plus it would be an alternative to the politically and economically weakened European Union. The body of the European Union has cracks all over it.<br>So, based on the military union that Great Britain already proposed you may see which countries Brits are interested in joining the Commonwealth but - what may happen as well is that if the Baltics will enter the conflict GB will abandon them and Poland if they see that they don’t have any chances in winning this battle. Let’s hope Poles understand it and won’t do anything really stupid.<br>The more important target is, wait for it, Germany. Germany is the only force that keeps European Union from falling apart. Once Germany will lose its leading role in the European Union, GB will take over Spain, Portugal, Netherlands and maybe even try to get Belgium, although France will probably be the one to get it.</p><h2 id="Russia"><a href="#Russia" class="headerlink" title="Russia"></a>Russia</h2><p>Russian Federation was dragged into this war and is currently fighting for its life. Although the <code>golden billion</code> is looking forward to Russia losing this war, they have to fear this outcome the most. If Russian Federation will feel that it’s losing - the geopolitical games will be first played after the nuclear winter again.</p><h2 id="European-Union"><a href="#European-Union" class="headerlink" title="European Union"></a>European Union</h2><p>EU cannot be considered an active player, since the majority of its countries are handling at the US’s behest but we can highlight a couple of countries that are trying to play its own game and may become quite successful at it in a longer run.</p><h2 id="Poland"><a href="#Poland" class="headerlink" title="Poland"></a>Poland</h2><p>Poland has been dreaming of <a href="https://en.wikipedia.org/wiki/Intermarium">Intermarium</a> - A great Poland that stretches from Baltic to the Black sea - since <code>World War I</code>. They see the current situation as the one in a lifetime opportunity to make at least some parts of this plan a reality. Even if it won’t fully work out, Poland hopes to get back the western part of Ukraine <a href="https://en.wikipedia.org/wiki/Volhynia">Volhynia</a> and <a href="https://en.wikipedia.org/wiki/Eastern_Galicia">Eastern Galicia</a>. It’s less likely that they will also get parts of Lithuania since Lithuania is part of the EU. Polish government is very deep in this game and it will be very hard for them to get out of that easily. They already announced that there will be no borders between Ukraine and Poland and they have already signed an agreement with Kiev regime that endows Polish citizen with the same rights as the Ukrainian ones in Ukraine not the other way around though - so, it’s quite obvious who’s the boss in this union. Poland deployed one of the largest mercenaries squad in Ukraine and has been training Ukrainian military forces including Nazi battalions on the premises of <a href="https://www.euseca.com/">European Security Academy</a> near Wroclaw.</p><p>Poland is already in the open confrontation with Germany over the delivery of the weapons in exchange to the ones that Poland has sent to Ukraine. Polish government also started the talks about the reparation that Germany still has to pay to Poland after the <code>World War II</code>. Poland’s longing to annex its former territories from Ukraine explains its very active position during the Russian special operation. They maye have already deployed some ground forces in the western part of Ukraine. They would like to annex the territories by carrying out out a referendum or by waiting until most parts of former Ukraine will be taken by the Russian military to start the negotiations over two western Ukrainian regions.</p><p>The best case scenario for Poland is the annexation of the western part of Ukraine. The worst case scenario though is - losing its <code>independence</code> or maybe even some of its territories to Russian Federation.</p><h2 id="Hungary"><a href="#Hungary" class="headerlink" title="Hungary"></a>Hungary</h2><p>Funny enough, Hungary is the only country in European Union that didn’t succumb to <code>Liberal Fascism</code> and unbridled Russophobia. Hungary is on one of the few countries that doesn’t sent any weapons to Ukraine and also doesn’t allow the transport of the ammunition or weapons through its territory.</p><p>It doesn’t mean that Viktor Orbán likes Russia, not at all, it only means that he is handling in the interest of its homeland. Most Hungarians don’t really favour LGBTQ+ or believe in 156 different genders. They also think that it makes sense to get gas and oil from the country that offers it at the best price possible.</p><p>As you may have heard Hungary already announced that it’s ready to protect its own people. Taking into account what has been said before about Ukraine bombing its own people, Hungary will be ready to protect <a href="https://en.wikipedia.org/wiki/Zakarpattia_Oblast">Zakarpattia Oblast</a>. Ukraine has the largest Hungarian diaspora outside Hungary which has over 3 million people. Most of them already received Hungarian passports and thus considered Hungarian citizens. We can expect Hungary seizing the opportunity and annexing Zakarpattia, where most of the population consider themselves Hungarians.</p><p>European Union is not happy with Hungary being the outlier and not obeying to the rules of the liberal fascism, so they’ve been attacking Hungarian for quite some time already. With the current situation, the attacks will only intensify but once Germany will get weak enough, Hungary will get out of the European Union and take its own route. Since Hungary is relatively small it will probably try to revive the Austro-Hungarian Empire. Austria as a neutral country also didn’t send any weapons to Ukraine what can have its benefits for the country in the near future although some of the government representatives are handling in the favour of the US which can potentially have bad implications for the country. If the Austrian government will make right choices and will take care of their own business they may have success with becoming one of the powerhouses of Europe again.</p><p>In case Hungary will drive the revival of the Austro-Hungarian Empire, they may get back parts of the north Italy, Croatia and even some Southern parts of Germany.</p><div style="text-align: center;">  <a><h1>To Be Continued</h1></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;That’s the second part of the &lt;code&gt;World Order&lt;/code&gt; series. It’s an attempt to analyze the current geopolitical situation and to draw some conclusions based on the open facts.&lt;/p&gt;</summary>
    
    
    
    
    <category term="politics, geopolitics, economy, Europ" scheme="https://igorkosta.github.io/tags/politics-geopolitics-economy-Europ/"/>
    
  </entry>
  
  <entry>
    <title>Fading World Order</title>
    <link href="https://igorkosta.github.io/2022/07/02/world-order/"/>
    <id>https://igorkosta.github.io/2022/07/02/world-order/</id>
    <published>2022-07-02T10:01:52.000Z</published>
    <updated>2022-08-01T16:00:25.899Z</updated>
    
    <content type="html"><![CDATA[<p>Since February the 24th the whole world seems not to be the same anymore.</p><p>But that’s only the case for the majority of the people, who were taught to believe the story, that’s been told by the media, politicians and the entertainment industry for the past 100 years.</p><span id="more"></span><p>The reality is different and what’s coming next will surprise you.</p><p>Whoever has been selling to you the idea that capitalism has won, is either a dumb ass or doesn’t understand the economy and geopolitics.</p><p>At its core capitalism is an expansive economy that constantly needs new markets. Looking back at the history, we see that the world was already fully explored in the beginning of the 20th century. Back then we didn’t have good enough means of transportation to use the new markets. Most of the production was still happening and Europe and United States and the trade wasn’t fully global yet. So, the markets were full - capitalism was stuck.</p><p>In order, to get it going again, either new markets had to be created or the old ones had to be destroyed. That’s how the <code>World War I</code> has happened.</p><p>After 4 years of brutal slaughter some markets were free again and the capitalism could continue working. On 11 November 1918, an armistice came into effect ending the war in Western Europe – but this did not mean the return of peace. The <code>Treaty of Versailles</code> wasn’t ratified by US and some other nations and was renegotiated multiple times afterwards - see <a href="https://en.wikipedia.org/wiki/Locarno_Treaties">Locarno Treaties</a>, <a href="https://en.wikipedia.org/wiki/Dawes_Plan">Dawes Plan</a>, <a href="https://en.wikipedia.org/wiki/Young_Plan">Young Plan</a> and <a href="https://en.wikipedia.org/wiki/Lausanne_Conference_of_1932">Lausanne Conference of 1932</a>.</p><p>For many, the end of <code>World War I</code> was only seen as an armistice.<br>The war will continue only 7 years after the <code>Lusanne Conference</code>.</p><p>The <code>World War II</code> was the most brutal war in the history of humanity so far. But even its consequences were only good for keeping the capitalism alive for around 15 years.</p><p>Since the most powerful countries already had nuclear weapons in its arsenal, a new <code>World War</code> wasn’t possible, so the speed of capitalism had to be slowed down at all costs. Thus already in 1960s you start to see first <code>ecologists</code> getting loud here and there. What they would like to achieve is the stop of progress. Most of their rhetoric is not based on facts - you can see it as a new church, where a human being has to be equal to an ant.</p><p>The ecologists were quite successful in their work. If you’re old enough and remember the Sci-Fi from 60s and 70s, that was inspired by the scientific and industrial progress, you seen that almost none of the ideas has been achieved. Even more so, we’ve rather seen a complete stop of the progress in some of areas. Do you remember Concorde airplane and Shuttle program?</p><p>Since the global war wasn’t possible anymore, we started to see a lot of different local conflicts all around the world:</p><ul><li>Vietnam</li><li>Afghanistan</li><li>Lebanon</li><li>Korea</li><li>Iraq</li><li>Libya</li><li>Yugoslavia</li></ul><p>Parallel to that US continue to support <a href="https://en.wikipedia.org/wiki/United_States_involvement_in_regime_change">Coup D’Etats</a> all around the world to promote the regime change and install the government that will run the country in favor of United States.</p><p>All of the efforts weren’t enough and at the end of the 20th century, we were on the brink of the next big crisis or a war but then a miracle has happened - the fall of the Soviet Union. It can be seen as a Coup D’Etat as well but the one that took a longer time to prepare.</p><p>So, after the fall of the Soviet Union, Capitalism got a change to rob the biggest country in the world. The feast went on for more than a decade. It was on of the craziest robberies of all time. More than 60% of the population of the Russian Federation went bankrupt. Industry, education, army have been eradicated almost completely.</p><p>After the Russian Federation started to get its independence back, the West started to realize that the next crisis is around the corner.</p><p><a href="https://en.wikipedia.org/wiki/Financial_crisis_of_2007%E2%80%932008">Global Financial Crisis</a> has happened. It was only the first sign of the upcoming, even bigger crisis. In order to push it back, capitalism needs cheap labor and resources. There’s only one independent country in the world that has all the resources capitalism needs to prolong its agony - Russia.</p><p>Since the project <a href="https://en.wikipedia.org/wiki/Ukraine">Anti-Russia</a> has been in the works for the past 30 years, it was about time to start arming its region in order to get Russia down to its knees and install the puppet government that will be ready to break down the Russian Federation into smaller states that will be easy to control.</p><p>Inspired by the success they had in Ukraine, the united west hoped to reach fast results in Russian Federation. As they saw their plan failing, the decision was made to start the war on Russian to weaken and force it to obey the current world order.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Since February the 24th the whole world seems not to be the same anymore.&lt;/p&gt;
&lt;p&gt;But that’s only the case for the majority of the people, who were taught to believe the story, that’s been told by the media, politicians and the entertainment industry for the past 100 years.&lt;/p&gt;</summary>
    
    
    
    
    <category term="politics, economy" scheme="https://igorkosta.github.io/tags/politics-economy/"/>
    
  </entry>
  
  <entry>
    <title>The Rise and Fall of DKB</title>
    <link href="https://igorkosta.github.io/2021/12/23/dkb/"/>
    <id>https://igorkosta.github.io/2021/12/23/dkb/</id>
    <published>2021-12-23T09:40:51.000Z</published>
    <updated>2022-08-01T16:00:25.895Z</updated>
    
    <content type="html"><![CDATA[<p>As of today <a href="https://dkb.de" target="_blank">DKB</a> is the third largest direct bank in Germany with more than 3.9 million customers.</p><p>After it has introduced the custody fees for the deposits larger than 25.000 Euros and removed its best product - a fee free credit card that could be used abroad free of charge both for payments and withdrawals it’s destined to lose some of its clients.</p><span id="more"></span><p>DKB is a relatively young bank - it’s been around since 1990 and is owned by <a href="https://www.bayernlb.de/">BayernLB</a> since 1995.</p><p>It’s not a secret that DKB is BayernLB’s most valuable asset and that is responsible for the majority of <a href="https://finanz-szene.de/banking/wo-der-485-mio-e-gewinn-der-bayernlb-so-ploetzlich-herkommt/">the group revenue</a>.</p><p>All German banks are pressured by the custody fees imposed on them by the European Central Bank since 2014. Despite the fact that they had 7 years to solve this problem without pushing the fees on to the customers, most of them did nothing. Unfortunately DKB is one of those banks.</p><p>In the last year DKB lowered the fee free deposits three times and reached now 25.000 Euros per account. Additionally to that DKB decided to remove the fee free Credit Card from its offering - it’s a paid product now.</p><p>The time to remove the Credit Card that was perfect for traveling couldn’t be better for since COVID-19 outbreak we travel less than ever. It doesn’t take away the fact that an integral banking product is gone.</p><p>I’ve been a customer of DKB for more than a decade. This direct bank has been a hidden gem of the German banking landscape for a very long time.</p><p>As a person working in the FinTech industry for a quite some  time I really liked the fact that the bank have chosen the path of getting customers by offering the best possible banking product on the German market for an average customer free of charge without unnecessary bells and whistles.</p><p>It never had a fancy user interface, neither on the web nor on the mobile device. Despite the fact that DKB is trying to promote itself as a fancy FinTech bank and has been hiring developers for the last couple of years, any real improvements haven’t been made to the customer facing applications. DKB’s mobile application is still its website wrapped into the WebView.</p><p>Having the right products customers could bear with rather antiquated digital products but now since the desired products are removed, the customers are being left with the bank that has a below average offering in an old packaging that still claims to be a FinTech bank which sounds rather ridiculous now.</p><p>So, what will happen next. I assume DKB will lose at least 10% of its current customer base without acquiring new customers. Most if its clients who were using DKB as their main banking account will probably move to <a href="https://www.ing.de/">ING</a> - the largest direct bank in Germany will only get bigger. Some younger clients may move to <a href="https://n26.com/">N26</a>.</p><p>Unfortunately most of the new banks didn’t learn how to make money, so the only way they are able to stay afloat is to go with the subscription model without offering a great product. Accumulating a lot of money they cannot do anything valuable with it.</p><p>I would love to talk to the decision makers at DKB to understand their mid- and long term growth plans and how they’re planning to overcome the future challenges without losing most of their client base.</p><p>If you have worked or still work at DKB and would like to talk - drop me a line at <a href="mailto:igor.kostyuchenok@gmail.com">igor.kostyuchenok@gmail.com</a>.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;As of today &lt;a href=&quot;https://dkb.de&quot; target=&quot;_blank&quot;&gt;DKB&lt;/a&gt; is the third largest direct bank in Germany with more than 3.9 million customers.&lt;/p&gt;
&lt;p&gt;After it has introduced the custody fees for the deposits larger than 25.000 Euros and removed its best product - a fee free credit card that could be used abroad free of charge both for payments and withdrawals it’s destined to lose some of its clients.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>The Perfect Pitch-Deck</title>
    <link href="https://igorkosta.github.io/2021/12/10/pitch-deck/"/>
    <id>https://igorkosta.github.io/2021/12/10/pitch-deck/</id>
    <published>2021-12-10T15:12:22.000Z</published>
    <updated>2022-08-01T16:00:25.899Z</updated>
    
    <content type="html"><![CDATA[<p>Startups are all about the speed of execution and iteration. If you don’t have enough financial resources to hire a team to execute on your idea 24/7 for the next 3-6 months, your best bet is to find like-minded people and start working on your pitch-deck.</p><span id="more"></span><p>Do not see your pitch-deck as <code>a means to an end</code> but rather as en exercise that you will have to do every couple of months to review your product and its position on the market. You’re doing this work primarily for yourself and not for a potential investor. You need it more than anyone else.</p><p>It’s not about you having a detailed execution plan, cause assuming that<br>everything will go as planned is clearly a delusion. Once you start executing, you will see how rapid your plan will change..</p><p>Your pitch-deck should show that you’re able to plan for short- and mid-term, analyze the current situation and build your product without completely losing focus.</p><p>The goal of the pitch-deck is not to have a step-by-step plan for your<br>product/company for the next 12 months but rather to show a potential investor that you thought about:</p><ul><li><strong>product/market fit</strong></li><li><strong>your market</strong> - more often than not you’ll start in a certain location and will later expand your product to the bigger market</li><li><strong>growth potential</strong> - how and where are you planning to grow</li><li><strong>competition</strong> - who’s your competitors and how your product is different/better</li><li><strong>funding amount</strong> - you should know how much funding you need and what you will spend it on</li></ul><blockquote><p>Don’t forget that there’s no formula for success - but there’s one for failure.</p></blockquote><p>I recommend to any startup founder to register at <a href="https://signal.nfx.com/">Signal</a> and create your brief. The guys at <a href="https://signal.nfx.com/">Signal</a> did a great job at providing the questions any founder should have answers to. <a href="https://signal.nfx.com/">Signal</a> also gives you the opportunity to create briefs targeted at certain investors.</p><p>So, getting inspiration from the Signal’s brief questions, let’s talk about<br>a perfect pitch-deck and what information it needs to provide:</p><ul><li><strong>Business Category/Sector</strong> - you have to know whether you’re<br>planning to sell you product/service to the customers or other businesses:<br>B2C, B2B, B2B2C etc. and what is the market for you product from the technical<br>point of view: FinTech, CleanTech, FoodTech etc. Your product can play in<br>multiple categories</li><li><strong>Current Stage of Your Company/Product</strong> - Pre-Product, Pre-Revenue,<br>Post-Revenue</li><li><strong>Team</strong> - Crucial topic. You’ll have a lot more chances to get funding, and<br>let’s be honest, to build your company if you have a team of like-minded<br>people working towards a common goal. To learn more about a <strong>perfect team</strong>,<br>head over to this article on my blog <a href="https://kostyuchenok.com/2021/09/27/perfect-startup-team/">Perfect Startup<br>Team</a></li><li><strong>Your Company Brief</strong> - description of your company in one sentence. Come up<br>with a plausible explanation of what your product does. Don’t use the<br>sentences like: <code>Airbnb for yachts</code> or <code>Uber for bicycles</code></li><li><strong>Market</strong> - how big is your market Why do you think it can get big. Ideally<br>your product will create its own market so that you can dominate it right<br>from the start</li><li><strong>Business Model</strong> - briefly explain how you’re planning to make money</li><li><strong>Timing</strong> - many products fail due to entering the market too early or too<br>late. Please, explain, why do you think now is the right time for your<br>product: technology shift, legislative shift, behavioural shift?</li><li><strong>Traction</strong> - if your product already has some traction, add this<br>information to your pitch-deck. Include the information about the user base<br>growth and the revenues. If you are working in a B2B area add the information<br>about the contracts closed and current and projected revenues. Even if you just<br>have an LoI signed with some prospects, mention it in your deck.</li><li><strong>Founder/VC-Fit</strong> - if you’re targeting a certain VC person or a fund, you<br>should convey here why you think it’s the right VC partner for your startup.</li></ul><p>What I personally find very important when I review the pitch-decks is how<br>little attention founders pay to the business and technology part of their decks.<br>They often do not know, how is their product different to their competitors or<br>how they’re planning to make money.</p><p>Please also don’t forget that it always makes sense to validate your idea. You<br>don’t have to build the complete product to do it - there’re ways to validate<br>it either prior to building it or during your <a href="https://en.wikipedia.org/wiki/Minimum_viable_product">MVP</a> phase.</p><p>Don’t try to create a perfect MVP and don’t spend time prematurely scaling it. You<br>will be amazed how much load a regular tech stack can handle. Most of the<br>startups will never achieve the scale they’re optimizing their products for.</p><p>If you want your pitch-deck reviewed or need an advice on starting to build the<br>product - drop me a line at <ahref="mailto:igor@kostyuchenok.com"><a href="mailto:&#105;&#103;&#111;&#114;&#x40;&#107;&#x6f;&#x73;&#x74;&#x79;&#117;&#99;&#x68;&#101;&#x6e;&#x6f;&#107;&#46;&#99;&#111;&#x6d;">&#105;&#103;&#111;&#114;&#x40;&#107;&#x6f;&#x73;&#x74;&#x79;&#117;&#99;&#x68;&#101;&#x6e;&#x6f;&#107;&#46;&#99;&#111;&#x6d;</a></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Startups are all about the speed of execution and iteration. If you don’t have enough financial resources to hire a team to execute on your idea 24/7 for the next 3-6 months, your best bet is to find like-minded people and start working on your pitch-deck.&lt;/p&gt;</summary>
    
    
    
    
    <category term="team" scheme="https://igorkosta.github.io/tags/team/"/>
    
    <category term="startup" scheme="https://igorkosta.github.io/tags/startup/"/>
    
    <category term="pitch-deck" scheme="https://igorkosta.github.io/tags/pitch-deck/"/>
    
    <category term="product" scheme="https://igorkosta.github.io/tags/product/"/>
    
  </entry>
  
  <entry>
    <title>Good Leaders</title>
    <link href="https://igorkosta.github.io/2021/10/15/good-leaders/"/>
    <id>https://igorkosta.github.io/2021/10/15/good-leaders/</id>
    <published>2021-10-15T10:46:38.000Z</published>
    <updated>2022-08-01T16:00:25.895Z</updated>
    
    <content type="html"><![CDATA[<p>Everything written below is highly influenced by my personal experience and talks that were given by the people I’m following.</p><p>What you will read here is my take on the leadership.</p><span id="more"></span><h1 id="Protect-Your-Team"><a href="#Protect-Your-Team" class="headerlink" title="Protect Your Team"></a>Protect Your Team</h1><p>A good leader always protects his team from other teams and other leaders (higher management).</p><ul><li>A failure of your team is your failure</li><li>A success of your team is their success</li></ul><h1 id="Support-Your-Team"><a href="#Support-Your-Team" class="headerlink" title="Support Your Team"></a>Support Your Team</h1><p>What to do when one of your teammates decided to leave - support her, even if it’s hard for you. When you see that people cannot grow further in your company or in their position, if you cannot give them the chance to grow - support them, even encourage them to leave. You’ll get a loyal person in another company/team.</p><h1 id="Loyalty"><a href="#Loyalty" class="headerlink" title="Loyalty"></a>Loyalty</h1><p>Don’t expect people to be loyal to your brand. People should be loyal to the team they belong to, not to the brand.</p><h1 id="Same-Values"><a href="#Same-Values" class="headerlink" title="Same Values"></a>Same Values</h1><p>The team and the leader should share the same values. Whenever you hire a new team member you should find out what she is ready for and what she’s not.<br>Try to hire people, not robots. The people who leave the workplace at 6pm sharp regardless of the current situation at work are as bad as the ones who put work before their kids or family.</p><h1 id="Behavioral-Patterns"><a href="#Behavioral-Patterns" class="headerlink" title="Behavioral Patterns"></a>Behavioral Patterns</h1><p>People don’t change. They also behave the same at work as they do with their family. See how your teammates behave. If your teammate treats his family badly the same will happen at work. Don’t kid yourself.</p><h1 id="Inspiration"><a href="#Inspiration" class="headerlink" title="Inspiration"></a>Inspiration</h1><p>You cannot inspire people. Your goal should be to hire inspired people. If you hire the ones who love what they do, they’ll already be inspired by themselves. The best thing you can do is to to not kill their inspiration.<br>Communicate honestly with them. They should know why do you think they shouldn’t do certain things. But bear in mind if you already tried something and failed it doesn’t necessarily mean it won’t work next time with different people.</p><h1 id="Let-Them-Make-Mistakes"><a href="#Let-Them-Make-Mistakes" class="headerlink" title="Let Them Make Mistakes"></a>Let Them Make Mistakes</h1><p>You have to let them make their own mistakes. Mistakes are the best source of learning - that’s just a nature of learing. If you make all the decisions for them they won’t grow and will leave sooner rather than later. If you let them make their own mistakes they will grow faster by order of magnitude.</p><h1 id="Let-Them-Show-Off"><a href="#Let-Them-Show-Off" class="headerlink" title="Let Them Show Off"></a>Let Them Show Off</h1><p>Let your people the chance to show their accomplishments. If you see a team where only the leader is known for the work done, it means he is afraid of growing people stronger than him. A leader has to be sure that when he quit there are two people who can take his place and work better than him.</p><h1 id="Listen"><a href="#Listen" class="headerlink" title="Listen"></a>Listen</h1><p>Whenever you have to make a decision, hear everyone’s opinion before you announce your own. If you announce your opinion/solution first and hear a better one afterwards, it might get hard for you to accept it. It can lead to an irrational decision just because your pride didn’t let you take someone else’s opinion before yours.</p><h1 id="Gossip"><a href="#Gossip" class="headerlink" title="Gossip"></a>Gossip</h1><p>Don’t allow or participate in any gossip inside of your team - it will tear your team apart. Even worse, when you have a confrontation between two strong personalities inside of your team - you’ll have to fire at least one of them.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Everything written below is highly influenced by my personal experience and talks that were given by the people I’m following.&lt;/p&gt;
&lt;p&gt;What you will read here is my take on the leadership.&lt;/p&gt;</summary>
    
    
    
    
    <category term="team" scheme="https://igorkosta.github.io/tags/team/"/>
    
    <category term="dynamics" scheme="https://igorkosta.github.io/tags/dynamics/"/>
    
    <category term="leaders" scheme="https://igorkosta.github.io/tags/leaders/"/>
    
  </entry>
  
  <entry>
    <title>Add shortcuts to your PWA</title>
    <link href="https://igorkosta.github.io/2021/10/10/pwa-shortcuts/"/>
    <id>https://igorkosta.github.io/2021/10/10/pwa-shortcuts/</id>
    <published>2021-10-10T10:43:18.000Z</published>
    <updated>2022-08-01T16:00:25.899Z</updated>
    
    <content type="html"><![CDATA[<p>Although the end of PWAs has been proclaimed a while ago, the Progressive Web Apps keep getting better.</p><p>Not only the processors have been improving at a rapid rate but also the<br><a href="https://nodesource.com/blog/why-the-new-v8-is-so-damn-fast/">V8 is getting better</a> with every iteration.</p><span id="more"></span><p>So, if you don’t have time to build your mobile app with React Native, Flutter or going full native with Swift or Kotlin - PWA can still be a good low entry barrier option.</p><p>The addition of <a href="https://web.dev/maskable-icon/">maskable icons</a> let your app finally have a more appealing icon that will be placed on the screen of your mobile phone if you decide to <code>install</code> it.</p><p>If you would like to try out the maskable icons, check out the <a href="https://maskable.app/">Maskable<br>App</a> - it allows you to easily create maskable icons for your app.</p><p>What can make your app even more appealing and can make it feel even more<br><code>native</code>-like are the shortcuts.</p><p>Shortcuts are accessible through long press on phones and right-clicking on desktop. When a user does a long press, he will see a context menu with links to a certain action of your app.</p><p>Let’s imagine you build a banking app and you want your users to be able to quickly access the <strong>Transfer Money</strong> screen that’s available under <code>https://my-shiny-bank.io/send-money</code></p><p>In order to add this shortcut to your PWA, you have to add the <code>shortcuts</code><br>section to your <code>manifest.json</code> file:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;BANG&quot;</span>,</span><br><span class="line">  <span class="string">&quot;short_name&quot;</span>: <span class="string">&quot;BANG&quot;</span>,</span><br><span class="line">  <span class="string">&quot;description&quot;</span>: <span class="string">&quot;Neo Bang&quot;</span>,</span><br><span class="line">  <span class="string">&quot;start_url&quot;</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">  <span class="string">&quot;display&quot;</span>: <span class="string">&quot;standalone&quot;</span>,</span><br><span class="line">  <span class="string">&quot;orientation&quot;</span>: <span class="string">&quot;portrait&quot;</span>,</span><br><span class="line">  <span class="string">&quot;background_color&quot;</span>: <span class="string">&quot;#1B252C&quot;</span>,</span><br><span class="line">  <span class="string">&quot;theme_color&quot;</span>: <span class="string">&quot;#1B252C&quot;</span>,</span><br><span class="line">  <span class="string">&quot;icons&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;src&quot;</span>: <span class="string">&quot;/icons/bang-maskable-192.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;sizes&quot;</span>: <span class="string">&quot;192x192&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;image/png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;purpose&quot;</span>: <span class="string">&quot;maskable any&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;src&quot;</span>: <span class="string">&quot;/icons/bang-maskable-512.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;sizes&quot;</span>: <span class="string">&quot;512x512&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;image/png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;purpose&quot;</span>: <span class="string">&quot;maskable any&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;shortcuts&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Transfer&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;short_name&quot;</span>: <span class="string">&quot;Dough Disposal&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;Send some dough to your peeps&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;/send-money&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;icons&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;src&quot;</span>: <span class="string">&quot;/img/shortcuts/black/send-money-4x.png&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;sizes&quot;</span>: <span class="string">&quot;96x96&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Overview&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;short_name&quot;</span>: <span class="string">&quot;My Dough&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;Where is my money?&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;/overview&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;icons&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;src&quot;</span>: <span class="string">&quot;/img/shortcuts/black/overview-4x.png&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;sizes&quot;</span>: <span class="string">&quot;96x96&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Once you added the shortcuts section, the icons you would like to see in your contextual menu and redeployed your app, you should get a result similar to the following:</p><div style="text-align: center;">  <img src="screenshot.jpg" width="50%" /></div><p>If your app functionality is hidden behind the authentication don’t forget to add the redirection to the shortcuts <code>&quot;url&quot;: &quot;/send-money&quot;</code> after a successful authentication.</p><p>The good design should be predictable - so, if your shortcuts represent the menu points of your app, then you should use the same icons both for your shortcuts and in your menu.</p><p>If you’re using material design library for your product you can download<br>material design icons: <a href="https://github.com/material-icons/material-icons-png">here</a> or <a href="https://www.materialpalette.com/icons">here</a></p><p>If you use <a href="https://fontawesome.com/">Font Awesome</a> you can use this Font <a href="https://fa2png.app/">Awesome 2 PNG</a> converter.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Although the end of PWAs has been proclaimed a while ago, the Progressive Web Apps keep getting better.&lt;/p&gt;
&lt;p&gt;Not only the processors have been improving at a rapid rate but also the&lt;br&gt;&lt;a href=&quot;https://nodesource.com/blog/why-the-new-v8-is-so-damn-fast/&quot;&gt;V8 is getting better&lt;/a&gt; with every iteration.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Perfect Startup Team</title>
    <link href="https://igorkosta.github.io/2021/09/27/perfect-startup-team/"/>
    <id>https://igorkosta.github.io/2021/09/27/perfect-startup-team/</id>
    <published>2021-09-27T00:00:00.000Z</published>
    <updated>2022-08-01T16:00:25.899Z</updated>
    
    <content type="html"><![CDATA[<p>If you’re long enough in the tech business, you should have heard a tale about 3H that every startup needs. In order for a startup to become successful it needs 3 founders:</p><ul><li>a Hacker</li><li>a Hustler</li><li>a Hippie (they call it Hipster nowadays but don’t follow the crowd)</li></ul><p>If you think about this setup for a bit, this constellation will definitely start making sense.</p><p>Let’s see what every one of those <code>3H</code> actually entails.</p><span id="more"></span><h3 id="A-Hacker"><a href="#A-Hacker" class="headerlink" title="A Hacker"></a>A Hacker</h3><p>Let’s start with the easiest one. A Hacker is your CTO - someone who will build the product, someone who cares about building cool products, someone who understands how to spend time efficiently.</p><p>Some tend to spend too much time over optimizing the early stage product.<br>Scalability doesn’t matter when you didn’t find your product fit yet. When you over optimize too early in the process, you’re wasting at least double the time by not executing on your idea, losing time on unnecessary bells and whistles before having found your product market fit.</p><p>As you may know, startup is all about the execution. The faster you can execute, the higher are the chances of your startup to become successful.</p><p>So a hacker should know how to <code>cut corners</code> in a smart way. There is a huge difference between your <a href="https://en.wikipedia.org/wiki/Minimum_viable_product">MVP</a> and your end product.</p><p>Building products is hard, building valuable products is even harder - that’s exactly why every <code>hacker</code> needs a counterpart - <code>a hippie</code>.</p><h3 id="A-Hippie"><a href="#A-Hippie" class="headerlink" title="A Hippie"></a>A Hippie</h3><p>Who’s a hippie you may ask. If you are too young and don’t know who <a href="https://en.wikipedia.org/wiki/Steve_Jobs">Steve<br>Jobs</a> was, I pity you and recommend you to start getting to know about him.</p><p>Up to this date, I personally consider him to be the best <code>product person</code><br>ever - you can argue, I don’t care.</p><p>So, if you haven’t seen <a href="https://vimeo.com/475108226">The Lost Interview</a> yet - do it now, you won’t regret it.</p><p>One of the questions Steve was asked is <a href="https://www.youtube.com/watch?v=uf6TzOHO_dk">Are you a hippie or a nerd</a> - so when the best <code>product person</code> of all time considered himself <code>a hippie</code>, we can assume that <code>a hippie</code> is your <code>CPO</code>.</p><p><a href="https://svpg.com/our-team/#marty">Marty Cagan</a> - the founder of the <a href="https://svpg.com/">Silicon Valley Product Group</a> has the best definition of a successful product - it emerges on the intersection of following three properties:</p><ul><li><code>Valuable</code> - Something that our customers will choose to use</li><li><code>Usable</code> - Easy to figure out how to use</li><li><code>Feasible</code> - Buildable using the technology stack and skills we have</li></ul><p>The best products exist on the intersection of those three qualities.</p><h3 id="A-Hustler"><a href="#A-Hustler" class="headerlink" title="A Hustler"></a>A Hustler</h3><p>This one is almost as clear as <code>a hacker</code> position. Your hustler is your <code>Head of Sales</code>. A very important person on your team. Don’t be disillusioned - <a href="https://samuelmullen.com/articles/startup-fallacies-if-you-build-it-they-will-come/">build it and they will come</a> is a fallacy. In the world full of similar products and never ending competition, you need <code>a hustler</code> who will sell your product to your customers and your idea to the investors.</p><p>This is the person who knows and believes in your product and help <code>a hippie</code> to find the best possible <a href="https://en.wikipedia.org/wiki/Product/market_fit">Product/market fit</a>.</p><h3 id="On-A-Side-note"><a href="#On-A-Side-note" class="headerlink" title="On A Side-note"></a>On A Side-note</h3><ul><li>Ideas are worth nothing without execution</li><li>Your customers do not care about your tech</li><li>Startup is a marathon not a sprint - pace yourself</li><li>Timing matters but you cannot control it</li><li>You don’t know how your product will be used</li><li>It will be harder than you think</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;If you’re long enough in the tech business, you should have heard a tale about 3H that every startup needs. In order for a startup to become successful it needs 3 founders:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a Hacker&lt;/li&gt;
&lt;li&gt;a Hustler&lt;/li&gt;
&lt;li&gt;a Hippie (they call it Hipster nowadays but don’t follow the crowd)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you think about this setup for a bit, this constellation will definitely start making sense.&lt;/p&gt;
&lt;p&gt;Let’s see what every one of those &lt;code&gt;3H&lt;/code&gt; actually entails.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>GraphQL Partial Update</title>
    <link href="https://igorkosta.github.io/2021/04/13/graphql-partial-update/"/>
    <id>https://igorkosta.github.io/2021/04/13/graphql-partial-update/</id>
    <published>2021-04-13T00:00:00.000Z</published>
    <updated>2022-08-01T16:00:25.895Z</updated>
    
    <content type="html"><![CDATA[<p>Recently we decided to use <a href="https://aws.amazon.com/amplify">AWS Amplify</a> for one of the products we’re currently working on.</p><p><a href="https://aws.amazon.com/amplify">AWS Amplify</a> promises to provide you with the option to rapidly develop the <a href="https://en.wikipedia.org/wiki/Representational_state_transfer">REST</a> or a <a href="https://graphql.org/">GraphQL</a> based backend that’s very well integrated with your frontend development - be it a web application or a mobile app. That’s at least the marketed value proposition.</p><span id="more"></span><p>I don’t wanna say that’s <a href="https://aws.amazon.com/amplify">AWS Amplify</a> is still in its infancy but let’s say it’s<br>not without its caveats. One of them is the documentation. In general AWS<br>provides a lot of documentation, which doesn’t necessarily means that it’s<br>good.</p><p>Usually the truly technical documentation like the one for AWS SDK is really<br>good, which is not always the case with the Docs for other services. With AWS<br>Amplify it’s pretty often the case that the documentation is not up-to-date and<br>you have to dig through the GitHub tickets discussions to find the truth or<br>the undocumented features (yes, <code>@http resolvers</code> - I look at you)</p><p>If you have to provide custom headers to your HTTP resolver based GraphQL<br>operation - you can send them as part of <code>API.graphql()</code> call as last<br>parameter, e.g.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> headers = &#123;</span><br><span class="line">  <span class="attr">foor</span>: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> API.graphql(</span><br><span class="line">  graphqlOperation(createFooBar, &#123; body &#125;),</span><br><span class="line">  headers,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>But I’m drifting away 😀</p><p>Ok, so, we decided to go with GraphQL since in the final iterations the product should have more than just a web application and, theoretically, it should be easier to fetch only the data you need due to the flexible nature of <a href="https://graphql.org/">GraphQL</a>.</p><p>So, if you worked with <a href="https://aws.amazon.com/amplify/">AWS Amplify</a> and <a href="https://graphql.org/">GraphQL</a> you know that it doesn’t support partial updates, which was a deal-breaker for us, since we have multiple flows where we have to partially push the data to the backend.</p><p>After a short research online, I found a pretty cool article from <a href="https://medium.com/@arnaud.bezancon">Arnaud Bezançon</a> here <a href="https://medium.com/workflowgen/graphql-mutations-partial-updates-implementation-bff586bda989">https://medium.com/workflowgen/graphql-mutations-partial-updates-implementation-bff586bda989</a></p><p>Although I really liked his way of doing things, my lazy nature wanted to have a more generic (not necessarily a better) solution though. So, my way of thinking was: since I only send parts of the data to the backend but it expects the whole { input } object from me, I will just merge the existing data with the new one and push it to the backend.</p><p>What you have to consider as well is that you will have to remove any automatically generated/updated fields from your <code>json</code> object — in my case <code>createdAt/updatedAt</code> fields.</p><p>So, below you see a quick and dirty way of doing it.</p><p>Please, note that I’m using email as the key of our user model. In addition to that, you will have to always send the whole user object with all the fields to the update mutation — meaning when you call <code>getUser</code> it should fetch the user object with all the fields.</p><p>In a nutshell - the flow is the following:</p><ul><li>try to fetch the user from the backend</li><li>if the user doesn’t exist - call <code>createUser</code> with the provided data</li><li>if the user exist - merge the existing data with the new one and call<br><code>updateUser</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; API, graphqlOperation &#125; <span class="keyword">from</span> <span class="string">&#x27;aws-amplify&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; getUser &#125; <span class="keyword">from</span> <span class="string">&#x27;@/graphql/queries&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createUser, updateUser &#125; <span class="keyword">from</span> <span class="string">&#x27;@/graphql/mutations&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; exclude &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/json&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> get = <span class="keyword">async</span> (email) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;</span><br><span class="line">      <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">getUser</span>: user,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125; = <span class="keyword">await</span> API.graphql(graphqlOperation(getUser, &#123; email &#125;));</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(error.errors);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> createOrUpdate = <span class="keyword">async</span> (input) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; email &#125; = input;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> user = <span class="keyword">await</span> get(email);</span><br><span class="line">    <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">      <span class="keyword">await</span> API.graphql(graphqlOperation(createUser, &#123; input &#125;));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// get current user data</span></span><br><span class="line">      <span class="comment">// and only update the provided values</span></span><br><span class="line">      <span class="comment">// createdAt, updatedAt have to be excluded</span></span><br><span class="line">      <span class="keyword">const</span> update = &#123; ...exclude([<span class="string">&#x27;createdAt&#x27;</span>, <span class="string">&#x27;updatedAt&#x27;</span>], user), ...input &#125;;</span><br><span class="line">      <span class="keyword">await</span> API.graphql(graphqlOperation(updateUser, &#123; <span class="attr">input</span>: update &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(error.errors);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">  get,</span><br><span class="line">  createOrUpdate,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Since the email is used as the key of the user model, it has to be passed to the <code>createOrUpdate</code> function as part of the <code>&#123; input &#125;</code> object. Whenever I have to create or update a user, we have to add the email to the input and then just call <code>createOrUpdate(input);</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; email &#125; = user;</span><br><span class="line"><span class="keyword">const</span> input = &#123; email, …payload &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">await</span> createOrUpdate(input);</span><br><span class="line">  ...</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(error);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>It’s not an efficient way of doing things since it will fetch the data from your backend before doing an update but this way you don’t have to do things manually or thing about the values you’d like to be updated.</p><p>That’s all folks.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Recently we decided to use &lt;a href=&quot;https://aws.amazon.com/amplify&quot;&gt;AWS Amplify&lt;/a&gt; for one of the products we’re currently working on.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/amplify&quot;&gt;AWS Amplify&lt;/a&gt; promises to provide you with the option to rapidly develop the &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;REST&lt;/a&gt; or a &lt;a href=&quot;https://graphql.org/&quot;&gt;GraphQL&lt;/a&gt; based backend that’s very well integrated with your frontend development - be it a web application or a mobile app. That’s at least the marketed value proposition.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Mock promisified AWS service operation calls with Jest</title>
    <link href="https://igorkosta.github.io/2021/04/10/mock-promisified-aws-sdk-calls/"/>
    <id>https://igorkosta.github.io/2021/04/10/mock-promisified-aws-sdk-calls/</id>
    <published>2021-04-10T00:00:00.000Z</published>
    <updated>2022-08-01T16:00:25.895Z</updated>
    
    <content type="html"><![CDATA[<p>At <a href="https://mbanq.com/cloud">Mbanq Cloud</a> we run most of our services on AWS and try to use AWS Lambda as much as possible.</p><p>A while ago I’ve been working on the a small npm package that should have helped us to make use of SSM and <a href="https://aws.amazon.com/kms/">KMS</a> to manage our system configuration. SSM and KMS play nicely together as the most of the AWS services.</p><p>In order to test the newly written npm package, I had to mock the promisified version of the <code>ssm.getParameters(request)</code></p><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> AWS = <span class="built_in">require</span>(<span class="string">&#x27;aws-sdk&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> ssm = AWS.SSM(&#123; <span class="attr">region</span>: <span class="string">&#x27;eu-west-1 &#125;)</span></span><br><span class="line"><span class="string">ssm.getParameters(request).promise() // we have to mock the response from this call</span></span><br></pre></td></tr></table></figure><p>There are different ways of mocking the AWS JS SDK calls. For example there is the <a href="https://github.com/dwyl/aws-sdk-mock">aws-mock-sdk</a> package from the very cool <a href="https://dwyl.com/">DWYL</a> guys. I decided to go with pure Jest implementation though.</p><p><img src="https://cdn-images-1.medium.com/max/2000/1*yZyG4rhfvTehkTsKtLxD9Q.png"></p><p>There are some things to be taken into account to make the SSM’s functionality testable:</p><ul><li>Use <strong>ssm</strong> as a parameter in your function call, e.g. const <code>load = (ssm, keys, expiryMs)</code> It will help you to use the mocked ssm whenever you write your tests. Sure you could also <code>module.exports = &#123; ssm &#125;</code> alongside other functions you want to export but I didn’t really like this idea</li><li>If you wanna check for the errors thrown inside of an <code>async/await</code> function you have to use: <code>expect(yourFunc()).rejects.toEqual(new Error(&#39;Error Message&#39;))</code> . The regular <code>expect(yourFunc()).toThrowError(&#39;Error Message&#39;)</code> <a href="https://github.com/facebook/jest/issues/1700#issuecomment-377890222">**WON’T WORK</a>**</li></ul><p>Ok, now you’re probably asking yourself:</p><blockquote><p>How the heck do you mock the promisified AWS service operation calls?</p></blockquote><p>You will either want to mock a successful response from the <code>ssm.getParameters(request).promise()</code> or the <code>Error</code> thrown by the this function call.</p><h3 id="Successful-response"><a href="#Successful-response" class="headerlink" title="Successful response"></a>Successful response</h3><p>First, create a js object with the promise key and mock the value of the promise with the <code>jest.fn().mockImplementation()</code> that will return a Promise that when resolved return a successful response.</p><p>Then return the created <code>ssmPromise</code> whenever you make a call to <code>getParameters()</code> function.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> AWS = <span class="built_in">require</span>(<span class="string">&#x27;aws-sdk&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> ssm = <span class="keyword">new</span> AWS.SSM()</span><br><span class="line"><span class="keyword">const</span> ssmPromise = &#123;</span><br><span class="line">  <span class="attr">promise</span>: jest.fn().mockImplementation(<span class="function">(<span class="params">request</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> response = &#123;</span><br><span class="line">        <span class="attr">Parameters</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">Name</span>: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">            <span class="attr">Type</span>: <span class="string">&#x27;String&#x27;</span>,</span><br><span class="line">            <span class="attr">Value</span>: <span class="string">&#x27;barfoorista&#x27;</span>,</span><br><span class="line">            <span class="attr">Version</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">LastModifiedDate</span>: <span class="string">&#x27;2018-08-22T13:49:55.717Z&#x27;</span>,</span><br><span class="line">            <span class="attr">ARN</span>: <span class="string">&#x27;arn:aws:ssm:eu-west-1:whatever:parameter/bar&#x27;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">Name</span>: <span class="string">&#x27;foo&#x27;</span>,</span><br><span class="line">            <span class="attr">Type</span>: <span class="string">&#x27;String&#x27;</span>,</span><br><span class="line">            <span class="attr">Value</span>: <span class="string">&#x27;foobarista&#x27;</span>,</span><br><span class="line">            <span class="attr">Version</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">LastModifiedDate</span>: <span class="string">&#x27;2018-08-22T13:49:41.486Z&#x27;</span>,</span><br><span class="line">            <span class="attr">ARN</span>: <span class="string">&#x27;arn:aws:ssm:eu-west-1:whatever:parameter/foo&#x27;</span></span><br><span class="line">           &#125;</span><br><span class="line">         ],</span><br><span class="line">         <span class="attr">InvalidParameters</span>: []</span><br><span class="line">       &#125;</span><br><span class="line">       resolve(response)</span><br><span class="line">     &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">ssm = &#123; <span class="attr">getParameters</span>: <span class="function">() =&gt;</span> &#123; <span class="keyword">return</span> ssmPromise &#125; &#125;</span><br></pre></td></tr></table></figure><h3 id="Throw-an-Error"><a href="#Throw-an-Error" class="headerlink" title="Throw an Error"></a>Throw an Error</h3><p>By using the ssm instance you created at the top of your test, you can also mock the <code>ssm.getParameters()</code> in one go.</p><p>Here is an example of how you could mock <code>ssm.getParameters()</code> throwing an Error</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ssm = &#123;</span><br><span class="line">  <span class="attr">getParameters</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">promise</span>: jest.fn().mockImplementation(<span class="function">(<span class="params">request</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;foobar&#x27;</span>))</span><br><span class="line">        &#125;).catch(<span class="function">() =&gt;</span> <span class="built_in">console</span>.log(<span class="string">&#x27;Ok&#x27;</span>))</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In a <a href="https://gist.github.com/igorkosta/6dae64ca2ababed7bec95255b2252842#file-sreda-test-js">gist</a> (pun intended) you can see part of the test, we’re using to test our package.</p><p>Here is the content of the <code>gist</code> for you to check out:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* eslint-env jest */</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; read, keys &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../sreda&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> AWS = <span class="built_in">require</span>(<span class="string">&#x27;aws-sdk&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> ssm = <span class="keyword">new</span> AWS.SSM()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ssmPromise = &#123;</span><br><span class="line">  <span class="attr">promise</span>: jest.fn().mockImplementation(<span class="function">(<span class="params">request</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> response = &#123;</span><br><span class="line">        <span class="attr">Parameters</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">Name</span>: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">            <span class="attr">Type</span>: <span class="string">&#x27;String&#x27;</span>,</span><br><span class="line">            <span class="attr">Value</span>: <span class="string">&#x27;barfoorista&#x27;</span>,</span><br><span class="line">            <span class="attr">Version</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">LastModifiedDate</span>: <span class="string">&#x27;2018-08-22T13:49:55.717Z&#x27;</span>,</span><br><span class="line">            <span class="attr">ARN</span>: <span class="string">&#x27;arn:aws:ssm:eu-west-1:whatever:parameter/bar&#x27;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">Name</span>: <span class="string">&#x27;foo&#x27;</span>,</span><br><span class="line">            <span class="attr">Type</span>: <span class="string">&#x27;String&#x27;</span>,</span><br><span class="line">            <span class="attr">Value</span>: <span class="string">&#x27;foobarista&#x27;</span>,</span><br><span class="line">            <span class="attr">Version</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">LastModifiedDate</span>: <span class="string">&#x27;2018-08-22T13:49:41.486Z&#x27;</span>,</span><br><span class="line">            <span class="attr">ARN</span>: <span class="string">&#x27;arn:aws:ssm:eu-west-1:whatever:parameter/foo&#x27;</span></span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">InvalidParameters</span>: []</span><br><span class="line">      &#125;</span><br><span class="line">      resolve(response)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">ssm = &#123; <span class="attr">getParameters</span>: <span class="function">() =&gt;</span> &#123; <span class="keyword">return</span> ssmPromise &#125; &#125;</span><br><span class="line"></span><br><span class="line">describe(<span class="string">&#x27;mock AWS.SSM()&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  beforeAll(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    process.env.NODE_ENV = <span class="string">&#x27;production&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  it(<span class="string">`throws an error if no keys are providerd`</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">throwsErr</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      read(ssm, [])</span><br><span class="line">    &#125;</span><br><span class="line">    expect(throwsErr).toThrowError(<span class="string">`You need to provide a non-empty array of config keys`</span>)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  it(<span class="string">`throws an error if some keys are missing`</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    expect(keys(ssm, [<span class="string">&#x27;foobar&#x27;</span>])).rejects.toEqual(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">`Missing SSM Parameter Store keys: foobar`</span>))</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  it(<span class="string">`throws an error when ssm is throwing one`</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    ssm = &#123;</span><br><span class="line">      <span class="attr">getParameters</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          <span class="attr">promise</span>: jest.fn().mockImplementation(<span class="function">(<span class="params">request</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">return</span> reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;foobar&#x27;</span>))</span><br><span class="line">            &#125;).catch(<span class="function">() =&gt;</span> <span class="built_in">console</span>.log(<span class="string">&#x27;Ok&#x27;</span>))</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    expect(keys(ssm, [<span class="string">&#x27;foo&#x27;</span>])).rejects.toEqual(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">`TypeError: Cannot destructure property \`Parameters\` of &#x27;undefined&#x27; or &#x27;null&#x27;.`</span>))</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>The <code>sreda</code> package is in the dev mode. Check it out if you would like to use<br>it in you serverless project: <a href="https://www.npmjs.com/package/sreda">https://www.npmjs.com/package/sreda</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add sreda</span><br><span class="line"></span><br><span class="line">npm i -S sreda</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;At &lt;a href=&quot;https://mbanq.com/cloud&quot;&gt;Mbanq Cloud&lt;/a&gt; we run most of our services on AWS and try to use AWS Lambda as much as possible.&lt;/p&gt;
&lt;p&gt;A while ago I’ve been working on the a small npm package that should have helped us to make use of SSM and &lt;a href=&quot;https://aws.amazon.com/kms/&quot;&gt;KMS&lt;/a&gt; to manage our system configuration. SSM and KMS play nicely together as the most of the AWS services.&lt;/p&gt;
&lt;p&gt;In order to test the newly written npm package, I had to mock the promisified version of the &lt;code&gt;ssm.getParameters(request)&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Organize your routes with Vue Router</title>
    <link href="https://igorkosta.github.io/2021/02/05/organize-routes-vue-router/"/>
    <id>https://igorkosta.github.io/2021/02/05/organize-routes-vue-router/</id>
    <published>2021-02-05T00:00:00.000Z</published>
    <updated>2022-08-01T16:00:25.899Z</updated>
    
    <content type="html"><![CDATA[<p>Everyone has its own view on how to organize the routes in a Single-Page Application-we’re not different.</p><p>Since we’re using <a href="https://vuejs.org/">Vue.js</a> in our current project, we’re also using the <a href="https://router.vuejs.org/">Vue Router</a>.</p><p>Here I would like to describe the approach we took to organize our router and its routes. We will probably change/improve the current state later on but for now I will describe the <a href="https://en.wikipedia.org/wiki/Status_quo">status quo</a>.</p><span id="more"></span><h3 id="Folder-structure"><a href="#Folder-structure" class="headerlink" title="Folder structure"></a>Folder structure</h3><p>We made a couple of iterations on how we want to organize our routes and we will definitely run through a couple of more iterations until we’re fully satisfied.</p><div style="text-align: center;">  <img src="https://cdn-images-1.medium.com/max/2704/1*Pj1ezbBzQnG4NHlD0seaWg.png" width="400px" /></div><p>Current folder structure we use is pretty straightforward:</p><ul><li><p><code>index.js</code>- defines the <code>beforeEach</code> logic for the routes</p></li><li><p><code>/routes/public.js</code> — holds all the public routes (e.g. /, /login, /registration etc.)</p></li><li><p><code>/routes/private.js</code> — has all the routes for the authenticated user</p></li><li><p><code>/routes/index.js</code> - just concatenates all the public and private routes and exports them</p></li></ul><p>Let’s walk quickly through every file — you’ll see it will all make sense very quickly.</p><h3 id="src-router-index-js"><a href="#src-router-index-js" class="headerlink" title="src/router/index.js"></a><code>src/router/index.js</code></h3><p><code>index.js</code> only holds one root route (you can also go without it). In our case it’s the dashboard route, the user is redirected to once authenticated.</p><p>Ok, so the most important part of the <code>index.js</code> is the <code>beforeEach</code> check.</p><p>In our application we have two types of routes:</p><ul><li><p>the strictly public ones — you have to be logged out to visit them</p></li><li><p>the private ones - you have to be authenticated to visit them</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;@/store/index.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> routes <span class="keyword">from</span> <span class="string">&#x27;@/router/routes/index.js&#x27;</span></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&#x27;/dashboard&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ].concat(routes)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> authenticated = store.state.user.authenticated</span><br><span class="line">  <span class="keyword">const</span> onlyLoggedOut = to.matched.some(<span class="function"><span class="params">record</span> =&gt;</span> record.meta.onlyLoggedOut)</span><br><span class="line">  <span class="keyword">const</span> isPublic = to.matched.some(<span class="function"><span class="params">record</span> =&gt;</span> record.meta.public)</span><br><span class="line">  <span class="keyword">if</span> (!isPublic &amp;&amp; !authenticated) &#123;</span><br><span class="line">    <span class="comment">// this route requires auth, check if logged in</span></span><br><span class="line">    <span class="comment">// if not, redirect to login page.</span></span><br><span class="line">    <span class="keyword">return</span> next(&#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">      <span class="attr">query</span>: &#123; <span class="attr">redirect</span>: to.fullPath &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (authenticated &amp;&amp; onlyLoggedOut) &#123;</span><br><span class="line">    <span class="keyword">return</span> next(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  next()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p>As you can see from the code snippet above, we read the authentication state from the local <a href="https://vuex.vuejs.org/">Vuex</a> store. Other information that we need to decide whether a route can be visited or not is stored in the <a href="https://router.vuejs.org/guide/advanced/meta.html">meta field</a> of the routes:</p><ul><li><p><code>onlyLoggedOut</code> — a route can only be visited by a non authenticated user</p></li><li><p><code>isPublic</code> - it’s a public route and can be visited without authentication (<code>/login</code>, <code>/registration</code> etc.)</p></li></ul><p>There are only two cases (we’d like to keep it simple in the beginning):</p><ul><li><p><code>!isPublic &amp;&amp; !authenticated</code> — the user is not authenticated but is trying to access the private route — he/she’ll be redirected to the <code>/login</code> page and will be redirected to the page he was trying to access upon successful authentication</p></li><li><p><code>authenticated &amp;&amp; onlyLoggedOut</code> - the user is authenticated but is trying to access the public page — he’ll be redirected back to the dashboard</p></li></ul><h3 id="src-router-routes-public-js"><a href="#src-router-routes-public-js" class="headerlink" title="src/router/routes/public.js"></a><code>src/router/routes/public.js</code></h3><p>We were thinking about breaking down the routes and put every one of them into its own file, but, mmm-maybe later :).</p><p>Ok, so all the public routes are in one file and all of them rock the same meta field:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">meta: &#123;</span><br><span class="line">  <span class="attr">public</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">onlyLoggedOut</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Login <span class="keyword">from</span> <span class="string">&#x27;@/views/Login.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Registration <span class="keyword">from</span> <span class="string">&#x27;@/views/Registration.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> ForgotPassword <span class="keyword">from</span> <span class="string">&#x27;@/views/ForgotPassword.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: Login</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/registration&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;registration&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: Registration</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/forgot-password&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;forgotPassword&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: ForgotPassword</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> routes.map(<span class="function"><span class="params">route</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> meta = &#123;</span><br><span class="line">    <span class="attr">public</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">onlyLoggedOut</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123; ...route, meta &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>In order to not pollute every route, we’re adding the meta field to all the routes in the file in the export section. This way we don’t have to think about adding the meta field to every new added route.</p><h3 id="src-router-routes-private-js"><a href="#src-router-routes-private-js" class="headerlink" title="src/router/routes/private.js"></a><code>src/router/routes/private.js</code></h3><p>You know the drill by now. All the private routes reside in one file and the meta field is added to each and one of them in the export section.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Accounts <span class="keyword">from</span> <span class="string">&#x27;@/views/Accounts/Index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Dashboard <span class="keyword">from</span> <span class="string">&#x27;@/views/Dashboard/Index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Settings <span class="keyword">from</span> <span class="string">&#x27;@/views/Settings/Index.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/accounts&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;accounts&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: Accounts</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/dashboard&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;dashboard&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: Dashboard</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/settings&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;settings&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: Settings</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> routes.map(<span class="function"><span class="params">route</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123; ...route, <span class="attr">meta</span>: &#123; <span class="attr">public</span>: <span class="literal">false</span> &#125; &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="src-router-routes-index-js"><a href="#src-router-routes-index-js" class="headerlink" title="src/router/routes/index.js"></a><code>src/router/routes/index.js</code></h3><p>What’s inside of the <code>routes/index.js</code> you may ask. It’s just the utility file that imports the routes from both <code>public.js</code> and <code>private.js</code> and exports them as one.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> publicRoutes <span class="keyword">from</span> <span class="string">&#x27;@/router/routes/public.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> privateRoutes <span class="keyword">from</span> <span class="string">&#x27;@/router/routes/private.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> publicRoutes.concat(privateRoutes)</span><br></pre></td></tr></table></figure><p>This file is not necessary, you could just import public and private routes directly into the <code>src/router/index.js</code></p><p>That’s all folks!</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Everyone has its own view on how to organize the routes in a Single-Page Application-we’re not different.&lt;/p&gt;
&lt;p&gt;Since we’re using &lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue.js&lt;/a&gt; in our current project, we’re also using the &lt;a href=&quot;https://router.vuejs.org/&quot;&gt;Vue Router&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here I would like to describe the approach we took to organize our router and its routes. We will probably change/improve the current state later on but for now I will describe the &lt;a href=&quot;https://en.wikipedia.org/wiki/Status_quo&quot;&gt;status quo&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
